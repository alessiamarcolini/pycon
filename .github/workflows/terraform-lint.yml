on:
  pull_request:
    paths:
      - "infrastructure/**/*"
      - "infrastructure/*"

name: Terraform Lint

env:
  TFMASK_VALUES_REGEX: "(?i)^.*[^a-zA-Z](akia|aroa|asia|access|webhook|aws|setting|profile|database|host|username|address|dsn|oauth|oauth2|application|secret|token|password|key|result|id).*$"
  TFMASK_RESOURCES_REGEX: "(?i)^(random_id|random_string|aws_elastic_beanstalk_environment|aws_iam_access_key).*$"

jobs:
  lint:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@master

      - name: terraform-fmt
        uses: hashicorp/terraform-github-actions/fmt@v0.3.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_ACTION_WORKING_DIR: ./infrastructure

  plan:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./infrastructure

    steps:
      - uses: actions/checkout@master
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.3
      - name: Install tfmask
        run: |
          sudo curl -L https://github.com/cloudposse/tfmask/releases/download/0.2.0/tfmask_linux_amd64 -o /usr/bin/tfmask
          sudo chmod +x /usr/bin/tfmask
      - name: Terraform init
        run: terraform init
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform validate
        run: terraform validate -no-color | tfmask
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform plan
        run: terraform plan -no-color | tfmask
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_database_password: ${{ secrets.TF_VAR_database_password }}
          TF_VAR_secret_key: ${{ secrets.TF_VAR_secret_key }}
          TF_VAR_mapbox_public_api_key: ${{ secrets.TF_VAR_mapbox_public_api_key }}
          TF_VAR_sentry_dsn: ${{ secrets.TF_VAR_sentry_dsn }}
          TF_VAR_ssl_certificate: ${{ secrets.TF_VAR_ssl_certificate }}
          TF_VAR_slack_incoming_webhook_url: ${{ secrets.TF_VAR_slack_incoming_webhook_url }}
          TF_VAR_social_auth_google_oauth2_key: ${{ secrets.TF_VAR_social_auth_google_oauth2_key }}
          TF_VAR_social_auth_google_oauth2_secret: ${{ secrets.TF_VAR_social_auth_google_oauth2_secret }}
          TF_VAR_mail_user: ${{ secrets.TF_VAR_mail_user }}
          TF_VAR_mail_password: ${{ secrets.TF_VAR_mail_password }}
          TF_VAR_pretix_secret_key: ${{ secrets.TF_VAR_pretix_secret_key }}
          TF_VAR_pretix_api_token: ${{ secrets.TF_VAR_pretix_api_token }}
          TF_VAR_pinpoint_application_id: ${{ secrets.TF_VAR_pinpoint_application_id }}
          TF_WORKSPACE: production
